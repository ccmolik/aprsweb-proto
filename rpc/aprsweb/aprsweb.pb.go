// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: aprsweb.proto

package aprsweb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// An APRS check-in type
type CheckinType int32

const (
	CheckinType_POSITION         CheckinType = 0 // A position checkin
	CheckinType_DIRECTIONFINDING CheckinType = 1 // A Direction Finding message
	CheckinType_OBJECT           CheckinType = 2 // An Object
	CheckinType_WEATHER          CheckinType = 3 // A Weather Report
	CheckinType_TELEMETRY        CheckinType = 4 // A Telemetry message
	CheckinType_MESSAGE          CheckinType = 5 //A Message, Bulletin, or Announcement
	CheckinType_QUERY            CheckinType = 6 // An APRS Query
	CheckinType_RESPONSE         CheckinType = 7 // An APRS Response to a Query
	CheckinType_STATUS           CheckinType = 8 // An APRS Status message
	CheckinType_OTHER            CheckinType = 9 // An "Other" APRS message
)

// Enum value maps for CheckinType.
var (
	CheckinType_name = map[int32]string{
		0: "POSITION",
		1: "DIRECTIONFINDING",
		2: "OBJECT",
		3: "WEATHER",
		4: "TELEMETRY",
		5: "MESSAGE",
		6: "QUERY",
		7: "RESPONSE",
		8: "STATUS",
		9: "OTHER",
	}
	CheckinType_value = map[string]int32{
		"POSITION":         0,
		"DIRECTIONFINDING": 1,
		"OBJECT":           2,
		"WEATHER":          3,
		"TELEMETRY":        4,
		"MESSAGE":          5,
		"QUERY":            6,
		"RESPONSE":         7,
		"STATUS":           8,
		"OTHER":            9,
	}
)

func (x CheckinType) Enum() *CheckinType {
	p := new(CheckinType)
	*p = x
	return p
}

func (x CheckinType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckinType) Descriptor() protoreflect.EnumDescriptor {
	return file_aprsweb_proto_enumTypes[0].Descriptor()
}

func (CheckinType) Type() protoreflect.EnumType {
	return &file_aprsweb_proto_enumTypes[0]
}

func (x CheckinType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckinType.Descriptor instead.
func (CheckinType) EnumDescriptor() ([]byte, []int) {
	return file_aprsweb_proto_rawDescGZIP(), []int{0}
}

// A Latitude/Longitude pair
type LatLng struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`   // The latitude in degrees [-90.0, +90.0]
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"` // The longitude in degrees [-180.0, +180.0]
}

func (x *LatLng) Reset() {
	*x = LatLng{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aprsweb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatLng) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatLng) ProtoMessage() {}

func (x *LatLng) ProtoReflect() protoreflect.Message {
	mi := &file_aprsweb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatLng.ProtoReflect.Descriptor instead.
func (*LatLng) Descriptor() ([]byte, []int) {
	return file_aprsweb_proto_rawDescGZIP(), []int{0}
}

func (x *LatLng) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *LatLng) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

// A LocationCheckin is an APRS message containing a Location Checkin
type LocationCheckin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // When populated, the timestamp associated with the location checkin
	Location  *LatLng `protobuf:"bytes,2,opt,name=Location,proto3" json:"Location,omitempty"`    // The reported location of a checkin
	IsMicE    bool    `protobuf:"varint,3,opt,name=IsMicE,proto3" json:"IsMicE,omitempty"`       // Whether or not the message was sent as Mic-E format
	Speed     float64 `protobuf:"fixed64,4,opt,name=speed,proto3" json:"speed,omitempty"`        // The speed reported
	RawGPS    string  `protobuf:"bytes,5,opt,name=RawGPS,proto3" json:"RawGPS,omitempty"`        // Raw GPS NMEA sentence
	RawWX     string  `protobuf:"bytes,6,opt,name=RawWX,proto3" json:"RawWX,omitempty"`          // Raw Weather station data
}

func (x *LocationCheckin) Reset() {
	*x = LocationCheckin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aprsweb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationCheckin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationCheckin) ProtoMessage() {}

func (x *LocationCheckin) ProtoReflect() protoreflect.Message {
	mi := &file_aprsweb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationCheckin.ProtoReflect.Descriptor instead.
func (*LocationCheckin) Descriptor() ([]byte, []int) {
	return file_aprsweb_proto_rawDescGZIP(), []int{1}
}

func (x *LocationCheckin) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LocationCheckin) GetLocation() *LatLng {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *LocationCheckin) GetIsMicE() bool {
	if x != nil {
		return x.IsMicE
	}
	return false
}

func (x *LocationCheckin) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *LocationCheckin) GetRawGPS() string {
	if x != nil {
		return x.RawGPS
	}
	return ""
}

func (x *LocationCheckin) GetRawWX() string {
	if x != nil {
		return x.RawWX
	}
	return ""
}

// An APRS checkin
type Checkin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceivedDatetime int64       `protobuf:"varint,1,opt,name=received_datetime,json=receivedDatetime,proto3" json:"received_datetime,omitempty"` // The Unix datetime the Checkin was received, in Microseconds. Not necessarily the report from the transmitting station.
	Type             CheckinType `protobuf:"varint,2,opt,name=type,proto3,enum=aprsweb.CheckinType" json:"type,omitempty"`                        // The APRS checkin type
	Source           string      `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`                                              // The source call sign
	Dest             string      `protobuf:"bytes,4,opt,name=dest,proto3" json:"dest,omitempty"`                                                  // The destination type
	// Types that are assignable to Checkin:
	//	*Checkin_LocationCheckin
	Checkin           isCheckin_Checkin `protobuf_oneof:"checkin"`
	SymbolTable       string            `protobuf:"bytes,6,opt,name=symbolTable,proto3" json:"symbolTable,omitempty"`             // The symbol table (primary / secondary / overlay)
	MapSymbol         string            `protobuf:"bytes,7,opt,name=mapSymbol,proto3" json:"mapSymbol,omitempty"`                 // The map symbol (e.g. '[')
	SymbolDescription string            `protobuf:"bytes,8,opt,name=symbolDescription,proto3" json:"symbolDescription,omitempty"` // The human-readable symbol description
	Comment           string            `protobuf:"bytes,999,opt,name=comment,proto3" json:"comment,omitempty"`                   // The comment string transmitted with the Checkin
}

func (x *Checkin) Reset() {
	*x = Checkin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aprsweb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checkin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checkin) ProtoMessage() {}

func (x *Checkin) ProtoReflect() protoreflect.Message {
	mi := &file_aprsweb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checkin.ProtoReflect.Descriptor instead.
func (*Checkin) Descriptor() ([]byte, []int) {
	return file_aprsweb_proto_rawDescGZIP(), []int{2}
}

func (x *Checkin) GetReceivedDatetime() int64 {
	if x != nil {
		return x.ReceivedDatetime
	}
	return 0
}

func (x *Checkin) GetType() CheckinType {
	if x != nil {
		return x.Type
	}
	return CheckinType_POSITION
}

func (x *Checkin) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Checkin) GetDest() string {
	if x != nil {
		return x.Dest
	}
	return ""
}

func (m *Checkin) GetCheckin() isCheckin_Checkin {
	if m != nil {
		return m.Checkin
	}
	return nil
}

func (x *Checkin) GetLocationCheckin() *LocationCheckin {
	if x, ok := x.GetCheckin().(*Checkin_LocationCheckin); ok {
		return x.LocationCheckin
	}
	return nil
}

func (x *Checkin) GetSymbolTable() string {
	if x != nil {
		return x.SymbolTable
	}
	return ""
}

func (x *Checkin) GetMapSymbol() string {
	if x != nil {
		return x.MapSymbol
	}
	return ""
}

func (x *Checkin) GetSymbolDescription() string {
	if x != nil {
		return x.SymbolDescription
	}
	return ""
}

func (x *Checkin) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type isCheckin_Checkin interface {
	isCheckin_Checkin()
}

type Checkin_LocationCheckin struct {
	LocationCheckin *LocationCheckin `protobuf:"bytes,5,opt,name=LocationCheckin,proto3,oneof"` // A location checkin
}

func (*Checkin_LocationCheckin) isCheckin_Checkin() {}

// A GetCheckinsResponse is a list of Checkins
type GetCheckinsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkins []*Checkin `protobuf:"bytes,1,rep,name=Checkins,proto3" json:"Checkins,omitempty"`
}

func (x *GetCheckinsResponse) Reset() {
	*x = GetCheckinsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aprsweb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckinsResponse) ProtoMessage() {}

func (x *GetCheckinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aprsweb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckinsResponse.ProtoReflect.Descriptor instead.
func (*GetCheckinsResponse) Descriptor() ([]byte, []int) {
	return file_aprsweb_proto_rawDescGZIP(), []int{3}
}

func (x *GetCheckinsResponse) GetCheckins() []*Checkin {
	if x != nil {
		return x.Checkins
	}
	return nil
}

// A GetCheckinsRequest can specify how long to return checkins for
type GetCheckinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Since int64 `protobuf:"varint,1,opt,name=since,proto3" json:"since,omitempty"` // The Unix datetime, in Microseconds, to return checkins since.
}

func (x *GetCheckinsRequest) Reset() {
	*x = GetCheckinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aprsweb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckinsRequest) ProtoMessage() {}

func (x *GetCheckinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aprsweb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckinsRequest.ProtoReflect.Descriptor instead.
func (*GetCheckinsRequest) Descriptor() ([]byte, []int) {
	return file_aprsweb_proto_rawDescGZIP(), []int{4}
}

func (x *GetCheckinsRequest) GetSince() int64 {
	if x != nil {
		return x.Since
	}
	return 0
}

var File_aprsweb_proto protoreflect.FileDescriptor

var file_aprsweb_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x70, 0x72, 0x73, 0x77, 0x65, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x61, 0x70, 0x72, 0x73, 0x77, 0x65, 0x62, 0x22, 0x42, 0x0a, 0x06, 0x4c, 0x61, 0x74, 0x4c,
	0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0xb8, 0x01, 0x0a,
	0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2b,
	0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x61, 0x70, 0x72, 0x73, 0x77, 0x65, 0x62, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e,
	0x67, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x49,
	0x73, 0x4d, 0x69, 0x63, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4d,
	0x69, 0x63, 0x45, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x77,
	0x47, 0x50, 0x53, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x61, 0x77, 0x47, 0x50,
	0x53, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x61, 0x77, 0x57, 0x58, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x52, 0x61, 0x77, 0x57, 0x58, 0x22, 0xe6, 0x02, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x61, 0x70, 0x72, 0x73, 0x77, 0x65, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x70, 0x72, 0x73, 0x77, 0x65, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x61, 0x70, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x61, 0x70, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x2c, 0x0a, 0x11,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0xe7, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x22, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x72, 0x73,
	0x77, 0x65, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x08, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x73, 0x22, 0x2a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63,
	0x65, 0x2a, 0x96, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x46, 0x49, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x10, 0x03, 0x12, 0x0d,
	0x0a, 0x09, 0x54, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x54, 0x52, 0x59, 0x10, 0x04, 0x12, 0x0b, 0x0a,
	0x07, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x55,
	0x45, 0x52, 0x59, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x08, 0x12,
	0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x09, 0x32, 0x53, 0x0a, 0x07, 0x41, 0x50,
	0x52, 0x53, 0x57, 0x65, 0x62, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x72, 0x73, 0x77, 0x65, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x72, 0x73, 0x77, 0x65, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x0b, 0x48, 0x02, 0x5a, 0x07, 0x61, 0x70, 0x72, 0x73, 0x77, 0x65, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aprsweb_proto_rawDescOnce sync.Once
	file_aprsweb_proto_rawDescData = file_aprsweb_proto_rawDesc
)

func file_aprsweb_proto_rawDescGZIP() []byte {
	file_aprsweb_proto_rawDescOnce.Do(func() {
		file_aprsweb_proto_rawDescData = protoimpl.X.CompressGZIP(file_aprsweb_proto_rawDescData)
	})
	return file_aprsweb_proto_rawDescData
}

var file_aprsweb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_aprsweb_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_aprsweb_proto_goTypes = []interface{}{
	(CheckinType)(0),            // 0: aprsweb.CheckinType
	(*LatLng)(nil),              // 1: aprsweb.LatLng
	(*LocationCheckin)(nil),     // 2: aprsweb.LocationCheckin
	(*Checkin)(nil),             // 3: aprsweb.Checkin
	(*GetCheckinsResponse)(nil), // 4: aprsweb.GetCheckinsResponse
	(*GetCheckinsRequest)(nil),  // 5: aprsweb.GetCheckinsRequest
}
var file_aprsweb_proto_depIdxs = []int32{
	1, // 0: aprsweb.LocationCheckin.Location:type_name -> aprsweb.LatLng
	0, // 1: aprsweb.Checkin.type:type_name -> aprsweb.CheckinType
	2, // 2: aprsweb.Checkin.LocationCheckin:type_name -> aprsweb.LocationCheckin
	3, // 3: aprsweb.GetCheckinsResponse.Checkins:type_name -> aprsweb.Checkin
	5, // 4: aprsweb.APRSWeb.GetCheckins:input_type -> aprsweb.GetCheckinsRequest
	4, // 5: aprsweb.APRSWeb.GetCheckins:output_type -> aprsweb.GetCheckinsResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_aprsweb_proto_init() }
func file_aprsweb_proto_init() {
	if File_aprsweb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aprsweb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatLng); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aprsweb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationCheckin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aprsweb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checkin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aprsweb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckinsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aprsweb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_aprsweb_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Checkin_LocationCheckin)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aprsweb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aprsweb_proto_goTypes,
		DependencyIndexes: file_aprsweb_proto_depIdxs,
		EnumInfos:         file_aprsweb_proto_enumTypes,
		MessageInfos:      file_aprsweb_proto_msgTypes,
	}.Build()
	File_aprsweb_proto = out.File
	file_aprsweb_proto_rawDesc = nil
	file_aprsweb_proto_goTypes = nil
	file_aprsweb_proto_depIdxs = nil
}
